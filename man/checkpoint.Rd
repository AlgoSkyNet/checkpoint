% Generated by roxygen2 (4.0.1): do not edit by hand
\name{checkpoint}
\alias{checkpoint}
\title{Configure session as if it took place on snapshot date as far as packages are concerned.}
\usage{
checkpoint(snapshotDate, project = getwd(), verbose = TRUE)
}
\arguments{
\item{snapshotDate}{Date of snapshot to use in YYYY-MM-DD format,  e.g. "2014-06-20". .}

\item{project}{A project  path. This is the path to the root of the project you want checkpointed. Defaults to current working directory per /code{/link{getwd}}.}

\item{verbose}{If TRUE, displays progress messages.}
}
\value{
NULL. See the \code{details} section for side effects.
}
\description{
The aim of this function is configure a session as if it had occured right after the snapshot date. That way you can reproduce how a computation took place at a certain time. This is intended to support reproducibility, that is you only need to add a checkpoint call to your scripts or packages to make sure that subsequent updates to packages do not modify the results of running those scripts or using those packages.
}
\details{
When you create a checkpoint, the following happens:

As a consequence of running checkpoint, a specialized library will be set up that contains only packages as they were available on CRAN on the snapshot date; a session will only be able to install packages into or load them from said library. As an additional convenience, a heuristic is applied to find packages that are used in the project directory and install them in the snapshot specific library. Currently loaded packages are reloaded from the snapshot specific library.
}
\examples{
\dontrun{

# Create temporary project and set working directory

example_project <- paste0("~/rrt_example_project_", Sys.Date())

dir.create(example_project, recursive = TRUE)
oldwd <- setwd(example_project)


# Write dummy code file to project

cat("library(MASS)", "library(foreach)",
    sep="\\n", 
    file="rrt_example_code.R")


# Create a checkpoint by specifying a snapshot date

library(RRT)
checkpoint("2014-09-17")

# Check that CRAN mirror is set to MRAN snapshot
getOption("repos")

# Check that library path is set to ~/.rrt
.libPaths()

# Check which packages are installed in RRT library
installed.packages()

# cleanup
unlink(example_project, recursive = TRUE)
setwd(oldwd)

}

}

